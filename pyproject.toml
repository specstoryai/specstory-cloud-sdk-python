[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "specstory"
version = "0.1.0"
description = "Tiny & delightful SDK for SpecStory Cloud API"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "SpecStory", email = "sdk@specstory.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed"
]
keywords = ["specstory", "api", "sdk", "cloud"]
dependencies = [
    "httpx>=0.25.0,<1.0.0"
]

[project.urls]
Homepage = "https://github.com/specstory/specstory-cloud-sdk"
Documentation = "https://docs.specstory.com/sdk"
Repository = "https://github.com/specstory/specstory-cloud-sdk"
Issues = "https://github.com/specstory/specstory-cloud-sdk/issues"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-httpx>=0.28.0",
    "pytest-asyncio>=0.21.0"
]
dev = [
    "black>=23.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "datamodel-code-generator>=0.25.0",
    "pydantic>=2.0.0"
]

[tool.setuptools.packages.find]
include = ["specstory*"]

[tool.setuptools.package-data]
specstory = ["py.typed"]

[tool.black]
line-length = 88
target-version = ["py39"]

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "W",    # pycodestyle warnings
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=specstory --cov-report=html --cov-report=term-missing"

[tool.coverage.run]
source = ["specstory"]
omit = ["*/tests/*", "*/scripts/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]